#include <Servo.h>
#include <WiFi.h>
//#include <OneWire.h>
//#include <DallasTemperature.h>

#include <Firebase_ESP_Client.h>

//Provide the token generation process info.
#include "addons/TokenHelper.h"
//Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"
//Define Firebase Data object
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;
bool signupOK = false;

#define API_KEY "AIzaSyAAU0dF-mqOF4ktp77b5oerbebSUTxun6Q"
#define DATABASE_URL "https://esp32-8ace1-default-rtdb.firebaseio.com/"

const char* ssid = "hotspot"; 
const char* password =  "12345678";

// PWM properties
const int freq = 12000;
const int ledChannel = 1;
const int resolution = 8;
const int ledPin = 4;

float temp;
const int tempPin = 32; //14
int fanpin=14;
int rotvalue=0;
int fanstatus=0;
int fanspeed=0;
//OneWire onewire(tempPin);
//DallasTemperature sensors(&onewire);

Servo servo_1; // servo controller (multiple can exist)

int servo_pin = 2; // PWM pin for servo control
int pos = 0;    // servo starting position
void setup() {
   Serial.begin(9600);
   servo_1.attach(servo_pin);
   pinMode(tempPin,INPUT);
   pinMode(fanpin,OUTPUT);
   WiFi.begin(ssid, password);
   Serial.println("Connecting to WiFi..");
    while (WiFi.status() != WL_CONNECTED) {
      delay(1000);
      Serial.print(".");
    }

   ledcSetup(ledChannel, freq, resolution);
   ledcAttachPin(ledPin, ledChannel);

   ledcWrite(ledChannel, 0);
  
    //Firebase Set up
    /* Assign the api key (required) */
  config.api_key = API_KEY;

  /* Assign the RTDB URL (required) */
  config.database_url = DATABASE_URL;

  /* Sign up */
  if (Firebase.signUp(&config, &auth, "", "")){
    Serial.println("\nConnected to WiFi!");
    signupOK = true;
  }
  else{
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }

  /* Assign the callback function for the long running token generation task */
  config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h
  
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}
void loop() {
  //Temp
   temp = analogRead(tempPin);
   // read analog volt from sensor and save to variable temp
   temp = temp * 0.48828125;

   // LED
   ledcWrite(ledChannel, fanspeed);
  
  //Initialization
    if (Firebase.ready() && signupOK){
     if (Firebase.RTDB.getInt(&fbdo, "rotation/value")) {
       if (fbdo.dataType() == "int") {
         rotvalue = fbdo.intData();
       }
     }
    }
    if (Firebase.ready() && signupOK){
     if (Firebase.RTDB.getInt(&fbdo, "fan/status")) {
       if (fbdo.dataType() == "int") {
         fanstatus = fbdo.intData();
       }
     }
    }
    //Fan deciding step
    if(fanstatus==0){
      digitalWrite(fanpin,LOW);
    }
    else{
      digitalWrite(fanpin,HIGH);
    }
    if (Firebase.ready() && signupOK){
     if (Firebase.RTDB.getInt(&fbdo, "fan/speed")) {
       if (fbdo.dataType() == "int") {
         fanspeed = fbdo.intData();
       }
     }
    }

 
   Firebase.RTDB.setFloat(&fbdo, "temperature/value", temp);
   servo_1.write(rotvalue);
   Serial.println(temp);
}
